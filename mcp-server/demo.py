"""
MCP Server Demo - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç
"""

import asyncio
from server import list_products, create_order, track_order


async def demo():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã MCP —Å–µ—Ä–≤–µ—Ä–∞."""
    print("üéØ MCP Server Demo\n")
    print("=" * 60)

    # Demo 1: Public endpoint - list products
    print("\n1Ô∏è‚É£  –ü—É–±–ª–∏—á–Ω—ã–π endpoint: list_products")
    print("-" * 60)
    try:
        products = await list_products(shop_id=8, limit=5, enabled_only=False)
        if products:
            print(f"‚úì –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {len(products)}")
            for p in products[:2]:
                print(f"  - {p.get('name')} ({p.get('price')} —Ç–≥)")
        else:
            print("‚ÑπÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞—è (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–æ–≤–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏)")
            print("   –ü—Ä–æ–¥—É–∫—Ç—ã –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–µ–∑ admin API")
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞: {e}")

    # Demo 2: Public endpoint - track order
    print("\n2Ô∏è‚É£  –ü—É–±–ª–∏—á–Ω—ã–π endpoint: track_order")
    print("-" * 60)
    try:
        await track_order("INVALID-ID")
        print("‚úó –ù–µ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ —Å—Ä–∞–±–æ—Ç–∞—Ç—å")
    except Exception as e:
        if "404" in str(e):
            print("‚úì Endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç (–∑–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–∞–∫ –∏ –æ–∂–∏–¥–∞–ª–æ—Å—å)")
        else:
            print(f"‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

    # Demo 3: Show that authentication endpoint exists
    print("\n3Ô∏è‚É£  Endpoint –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: login")
    print("-" * 60)
    print("‚úì –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω")
    print("  –î–ª—è –≤—Ö–æ–¥–∞: login(phone='77015211545', password='1234')")

    # Demo 4: Show that admin endpoints exist
    print("\n4Ô∏è‚É£  Admin endpoints (—Ç—Ä–µ–±—É—é—Ç —Ç–æ–∫–µ–Ω)")
    print("-" * 60)
    print("‚úì create_product - —Å–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä")
    print("‚úì update_product - –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä")
    print("‚úì list_orders - —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤")
    print("‚úì update_order_status - –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞")
    print("‚úì add_warehouse_stock - –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ —Å–∫–ª–∞–¥")
    print("‚úì update_shop_settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞")

    # Summary
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û:")
    print("=" * 60)
    print("‚úÖ MCP —Å–µ—Ä–≤–µ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ 15 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    print("‚úÖ Backend API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:8014")
    print("‚úÖ Public endpoints —Ä–∞–±–æ—Ç–∞—é—Ç")
    print("‚úÖ Admin endpoints —Ç—Ä–µ–±—É—é—Ç —Ç–æ–∫–µ–Ω –æ—Ç login()")
    print()
    print("üöÄ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Claude Code!")
    print()
    print("–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ Claude Code:")
    print("  claude mcp add flower-shop \\")
    print("    --transport stdio \\")
    print(f"    '{asyncio.get_event_loop().__class__.__module__}/.venv/bin/python server.py'")
    print()


if __name__ == "__main__":
    asyncio.run(demo())
