#!/usr/bin/env python3
"""Test Kaspi refunds on production"""
import requests

BASE_URL = "https://figma-product-catalog-production.up.railway.app/api/v1"
PAYMENT_ID = "12707474637"
TOTAL = 12000  # tenge

def test_refund(amount, description):
    """Test refund"""
    print(f"\n{description}")
    print(f"üí∏ –í–æ–∑–≤—Ä–∞—Ç: {amount} —Ç–µ–Ω–≥–µ...")

    response = requests.post(
        f"{BASE_URL}/kaspi/refund",
        json={"external_id": PAYMENT_ID, "amount": amount}
    )

    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ!")
        print(f"   –û—Ç–≤–µ—Ç: {data}")
        return True
    else:
        try:
            error = response.json().get('detail', response.text)
        except:
            error = response.text
        print(f"‚ùå –û—à–∏–±–∫–∞: {error}")
        return False

def main():
    print("="*60)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–û–ó–í–†–ê–¢–û–í KASPI PAY –ù–ê –ü–†–û–î–ê–ö–®–ï–ù–ï")
    print("="*60)
    print(f"Payment ID: {PAYMENT_ID}")
    print(f"–û–±—â–∞—è —Å—É–º–º–∞: {TOTAL} —Ç–µ–Ω–≥–µ")

    # Refund 1: 50%
    test_refund(TOTAL / 2, "1Ô∏è‚É£ –ü–µ—Ä–≤—ã–π –≤–æ–∑–≤—Ä–∞—Ç (50%)")

    # Refund 2: Remaining 50%
    test_refund(TOTAL / 2, "2Ô∏è‚É£ –í—Ç–æ—Ä–æ–π –≤–æ–∑–≤—Ä–∞—Ç (–æ—Å—Ç–∞–ª—å–Ω—ã–µ 50%)")

    # Refund 3: Excess (should fail)
    test_refund(1000, "3Ô∏è‚É£ –ò–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω)")

    print("\n" + "="*60)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("="*60)

if __name__ == "__main__":
    main()
