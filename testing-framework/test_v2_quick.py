#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç V2 AI Agent Service
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤ Telegram
"""

import requests
import json
import time
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
V2_URL = "http://localhost:8002"
TEST_USER_ID = "quick_test"

def print_separator():
    print("=" * 80)

def test_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint"""
    print_separator()
    print("üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞...")

    try:
        response = requests.get(f"{V2_URL}/health", timeout=5)
        health = response.json()

        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {health['status']}")
        print(f"üìä Cache Hit Rate: {health['cache_hit_rate']}")
        print(f"üìà Total Requests: {health['total_requests']}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_chat(message: str):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ v2 –∏ –ø–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç"""
    print_separator()
    print(f"üí¨ –û—Ç–ø—Ä–∞–≤–∫–∞: '{message}'")
    print(f"üïê –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")

    payload = {
        "message": message,
        "user_id": TEST_USER_ID,
        "channel": "telegram"
    }

    try:
        start_time = time.time()
        response = requests.post(
            f"{V2_URL}/chat",
            json=payload,
            timeout=60
        )
        elapsed = time.time() - start_time

        if response.status_code == 200:
            data = response.json()

            print(f"\n‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –∑–∞ {elapsed:.2f}—Å")
            print(f"\nüìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:")
            print("-" * 80)
            # –£–±–∏—Ä–∞–µ–º thinking –∏ conversation_status –∏–∑ –≤—ã–≤–æ–¥–∞
            text = data['text']
            if '<thinking>' in text:
                text = text.split('</thinking>')[-1].strip()
            if '<conversation_status>' in text:
                text = text.split('<conversation_status>')[0].strip()
            print(text)
            print("-" * 80)

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º usage
            usage = data.get('usage', {})
            print(f"\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${usage.get('total_cost_usd', 0):.6f}")
            print(f"üîÑ Cache hit: {usage.get('cache_hit', False)}")
            print(f"üìä –¢–æ–∫–µ–Ω—ã: input={usage.get('input_tokens', 0)}, output={usage.get('output_tokens', 0)}")

            if usage.get('cache_creation_tokens', 0) > 0:
                print(f"üÜï Cache created: {usage.get('cache_creation_tokens', 0)} tokens")
            if usage.get('cache_read_tokens', 0) > 0:
                print(f"üìñ Cache read: {usage.get('cache_read_tokens', 0)} tokens")

            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"""
    print("\nüß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç V2 AI Agent Service")
    print(f"üéØ URL: {V2_URL}")
    print(f"üë§ User ID: {TEST_USER_ID}\n")

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health
    if not test_health():
        print("\n‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ v2 –∑–∞–ø—É—â–µ–Ω.")
        return

    # 2. –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    test_chat("–ø—Ä–∏–≤–µ—Ç")

    # 3. –¢–µ—Å—Ç —Å –∫—ç—à–µ–º (–≤—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å cache)
    input("\n‚è∏Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–µ—Å—Ç–∞...")
    test_chat("–ø–æ–∫–∞–∂–∏ –≥–æ—Ç–æ–≤—ã–µ –±—É–∫–µ—Ç—ã")

    # 4. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    input("\n‚è∏Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è —Ç–µ—Å—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞...")
    test_chat("–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å 15 —Ä–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Ç—Ä–æ–º. –ò–≤–∞–Ω 77011111111, –∞–¥—Ä–µ—Å –ê–±–∞—è 50")

    print_separator()
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("\nüí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ï—Å–ª–∏ v2 —Ä–∞–±–æ—Ç–∞–µ—Ç, –º–æ–∂–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ Telegram @cvetysdkbot")
    print(f"üí° –õ–æ–≥–∏ v2: tail -f /tmp/v2_restart.log")
    print(f"üí° –õ–æ–≥–∏ –±–æ—Ç–∞: tail -f /tmp/bot_restart.log\n")

if __name__ == "__main__":
    main()
