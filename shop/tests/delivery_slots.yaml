---
# Delivery Slots Test Suite
# Tests delivery time validation and available slots functionality

test_suite:
  name: "Delivery Slots Tests"
  description: "Tests delivery slot availability, time validation, and business hours"
  base_url: "http://localhost:8014/api/v1"
  shop_id: 8

setup:
  - name: "Get test product for delivery checks"
    method: GET
    endpoint: "/products"
    params:
      shop_id: 8
      limit: 1
    save_response:
      product_id: "$[0].id"
    assertions:
      - type: status_code
        expected: 200

tests:
  # =========================================
  # Test 1: Get Shop Working Hours
  # =========================================
  - name: "Fetch shop working hours"
    method: GET
    endpoint: "/shop/working-hours"
    params:
      shop_id: "{{shop_id}}"
    save_response:
      working_hours_exist: "$.monday"
    assertions:
      - type: status_code
        expected: 200
      - type: json_path
        path: "$.monday"
        operator: "exists"

  # =========================================
  # Test 2: Get Available Delivery Slots for Today
  # =========================================
  - name: "Get delivery slots for today"
    method: GET
    endpoint: "/delivery/slots"
    params:
      shop_id: "{{shop_id}}"
      date: ""  # Empty means today
    assertions:
      - type: status_code
        expected: 200

  # =========================================
  # Test 3: Get Available Delivery Slots for Specific Date
  # =========================================
  - name: "Get delivery slots for specific future date"
    method: GET
    endpoint: "/delivery/slots"
    params:
      shop_id: "{{shop_id}}"
      date: "2025-10-25"
    save_response:
      slot_count: "$"
    assertions:
      - type: status_code
        expected: 200
      - type: json_length
        path: "$"
        operator: ">="
        expected: 0

  # =========================================
  # Test 4: Get Delivery Slots with Product IDs
  # =========================================
  - name: "Get delivery slots considering product preparation time"
    method: GET
    endpoint: "/delivery/slots"
    params:
      shop_id: "{{shop_id}}"
      date: "2025-10-26"
      product_ids: "{{product_id}}"
    assertions:
      - type: status_code
        expected: 200

  # =========================================
  # Test 5: Validate Valid Delivery Time
  # =========================================
  - name: "Validate a valid delivery time"
    method: POST
    endpoint: "/delivery/validate"
    params:
      shop_id: "{{shop_id}}"
      delivery_time: "2025-10-25 14:00"
    assertions:
      - type: status_code
        expected: 200
      - type: json_path
        path: "$.valid"
        expected: true

  # =========================================
  # Test 6: Validate Invalid Delivery Time (Past)
  # =========================================
  - name: "Validate past delivery time (should be invalid)"
    method: POST
    endpoint: "/delivery/validate"
    params:
      shop_id: "{{shop_id}}"
      delivery_time: "2020-01-01 14:00"
    assertions:
      - type: status_code
        expected: 200
      - type: json_path
        path: "$.valid"
        expected: false

  # =========================================
  # Test 7: Validate Delivery Time Outside Working Hours
  # =========================================
  - name: "Validate delivery time outside working hours"
    method: POST
    endpoint: "/delivery/validate"
    params:
      shop_id: "{{shop_id}}"
      delivery_time: "2025-10-25 03:00"  # Early morning, likely closed
    skip: true
    reason: "Working hours vary by shop, test may be unreliable"

  # =========================================
  # Test 8: Check Delivery Feasibility for Valid Date
  # =========================================
  - name: "Check delivery feasibility for future date"
    method: GET
    endpoint: "/delivery/feasibility"
    params:
      shop_id: "{{shop_id}}"
      delivery_date: "2025-10-25"
    assertions:
      - type: status_code
        expected: 200
      - type: json_path
        path: "$.feasible"
        expected: true

  # =========================================
  # Test 9: Check Delivery Feasibility for Today
  # =========================================
  - name: "Check delivery feasibility for today"
    method: GET
    endpoint: "/delivery/feasibility"
    params:
      shop_id: "{{shop_id}}"
      delivery_date: ""  # Empty means today
    assertions:
      - type: status_code
        expected: 200

  # =========================================
  # Test 10: Check Delivery Feasibility with Product IDs
  # =========================================
  - name: "Check delivery feasibility considering product preparation"
    method: GET
    endpoint: "/delivery/feasibility"
    params:
      shop_id: "{{shop_id}}"
      delivery_date: "2025-10-26"
      product_ids: "{{product_id}}"
    assertions:
      - type: status_code
        expected: 200

  # =========================================
  # Test 11: Get Delivery Slots for Multiple Products
  # =========================================
  - name: "Get delivery slots for multiple products"
    method: GET
    endpoint: "/delivery/slots"
    params:
      shop_id: "{{shop_id}}"
      date: "2025-10-27"
      product_ids: "{{product_id}},{{product_id}}"
    assertions:
      - type: status_code
        expected: 200

  # =========================================
  # Test 12: Validate Delivery Time Format Variations
  # =========================================
  - name: "Validate delivery time with date-only format"
    method: POST
    endpoint: "/delivery/validate"
    params:
      shop_id: "{{shop_id}}"
      delivery_time: "2025-10-25"  # No time specified
    skip: true
    reason: "Time format requirements may vary"

  # =========================================
  # Test 13: Check Weekend Delivery Availability
  # =========================================
  - name: "Check delivery slots for weekend (Saturday)"
    method: GET
    endpoint: "/delivery/slots"
    params:
      shop_id: "{{shop_id}}"
      date: "2025-11-01"  # Saturday
    assertions:
      - type: status_code
        expected: 200

  # =========================================
  # Test 14: Validate Very Near Future Time (1 hour ahead)
  # =========================================
  - name: "Validate delivery time 1 hour from now"
    method: POST
    endpoint: "/delivery/validate"
    params:
      shop_id: "{{shop_id}}"
      delivery_time: "2025-10-14 16:00"  # Adjust based on current time
    skip: true
    reason: "Time-dependent test, requires dynamic time calculation"

  # =========================================
  # Test 15: Get Delivery Slots for Far Future Date
  # =========================================
  - name: "Get delivery slots for far future date (3 months ahead)"
    method: GET
    endpoint: "/delivery/slots"
    params:
      shop_id: "{{shop_id}}"
      date: "2026-01-15"
    assertions:
      - type: status_code
        expected: 200

cleanup:
  - name: "No cleanup needed"
    skip: true
    reason: "Delivery slot tests don't create any data"

summary:
  print_message: |
    ✅ Delivery Slots Test Complete!

    Summary:
    - Working hours fetched: ✓
    - Available slots retrieved: ✓
    - Delivery time validation: ✓
    - Feasibility checks: ✓
    - Product preparation time considered: ✓

    Business Logic Validated:
    - Shop working hours respected
    - Past delivery times rejected
    - Product preparation lead time calculated
    - Weekend availability checked
