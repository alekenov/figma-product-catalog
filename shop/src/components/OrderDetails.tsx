import { CvetyInput } from './ui/cvety-input';
import { CvetyTextarea } from './ui/cvety-textarea';
import { CvetyButton } from './ui/cvety-button';
import { useState } from 'react';

interface OrderDetailsProps {
  isEditable?: boolean;
}

export function OrderDetails({ isEditable = true }: OrderDetailsProps) {
  const [isEditing, setIsEditing] = useState(false);
  const [isSaving, setIsSaving] = useState(false);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã—Ö –ø–æ–ª–µ–π
  const [editData, setEditData] = useState({
    recipient: '–ö—Å–µ–Ω–∏—è',
    phone: '+7 (917) 096-5427',
    address: '–≥. –ê—Å—Ç–∞–Ω–∞, —É–ª. –°–∞—Ä–∞–π—à—ã–∫, 127',
    deliveryDate: '2024-01-30',
    deliveryTime: '14:24',
    comment: '–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!',
    cardText: '–î–æ—Ä–æ–≥–∞—è –ö—Å–µ–Ω–∏—è! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è! –ñ–µ–ª–∞—é —Å—á–∞—Å—Ç—å—è, –∑–¥–æ—Ä–æ–≤—å—è –∏ –º–Ω–æ–≥–æ —Ä–∞–¥–æ—Å—Ç–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤! üåπ'
  });

  const [originalData] = useState(editData);

  const handleSave = async () => {
    setIsSaving(true);
    await new Promise(resolve => setTimeout(resolve, 1500));
    setIsSaving(false);
    setIsEditing(false);
    console.log('Order updated:', editData);
  };

  const handleCancel = () => {
    setEditData(originalData);
    setIsEditing(false);
  };

  const orderInfo = [
    { 
      key: 'recipient',
      label: '–ü–æ–ª—É—á–∞—Ç–µ–ª—å', 
      value: `${editData.recipient}, ${editData.phone}`,
      editable: true
    },
    { 
      key: 'address',
      label: '–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏', 
      value: editData.address,
      editable: true
    },
    { 
      key: 'datetime',
      label: '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è', 
      value: `${new Date(editData.deliveryDate).toLocaleDateString('ru-RU', { 
        weekday: 'long', 
        year: 'numeric', 
        month: 'long', 
        day: 'numeric' 
      })}, ${editData.deliveryTime}`,
      editable: true
    },
    { 
      key: 'comment',
      label: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É', 
      value: editData.comment,
      editable: true
    },
    { 
      key: 'cardText',
      label: '–¢–µ–∫—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∫–∏', 
      value: editData.cardText,
      editable: true
    }
  ];

  return (
    <div className="p-[var(--spacing-4)] bg-white rounded-[var(--radius-md)] space-y-[var(--spacing-4)]">
      <div className="flex items-center justify-between">
        <h2 className="text-[var(--text-primary)] font-medium">–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h2>
        
        {isEditable && !isEditing && (
          <button
            onClick={() => setIsEditing(true)}
            className="px-3 py-1 text-[var(--brand-primary)] border border-[var(--brand-primary)] rounded-[var(--radius-md)] text-sm font-medium hover:bg-[var(--brand-primary)]/5 transition-colors"
          >
            –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
          </button>
        )}
      </div>

      {!isEditable && (
        <div className="p-[var(--spacing-3)] bg-[var(--background-secondary)] rounded-[var(--radius-md)]">
          <p className="text-[var(--text-secondary)] text-sm">
            ‚ö†Ô∏è –ó–∞–∫–∞–∑ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ –ø–µ—Ä–µ–¥–∞–Ω –∫—É—Ä—å–µ—Ä—É
          </p>
        </div>
      )}
      
      <div className="space-y-[var(--spacing-4)]">
        {!isEditing ? (
          <div className="space-y-[var(--spacing-3)]">
            {orderInfo.map((info, index) => (
              <div key={index} className="space-y-[var(--spacing-1)]">
                <p className="text-[var(--text-secondary)] text-sm">{info.label}</p>
                <p className="text-[var(--text-primary)]">{info.value}</p>
              </div>
            ))}
          </div>
        ) : (
          <div className="space-y-[var(--spacing-4)]">
            <div className="grid grid-cols-2 gap-[var(--spacing-3)]">
              <CvetyInput
                label="–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è"
                value={editData.recipient}
                onChange={(e) => setEditData({...editData, recipient: e.target.value})}
              />
              <CvetyInput
                label="–¢–µ–ª–µ—Ñ–æ–Ω"
                value={editData.phone}
                onChange={(e) => setEditData({...editData, phone: e.target.value})}
              />
            </div>
            
            <CvetyInput
              label="–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏"
              value={editData.address}
              onChange={(e) => setEditData({...editData, address: e.target.value})}
            />
            
            <div className="grid grid-cols-2 gap-[var(--spacing-3)]">
              <CvetyInput
                label="–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏"
                type="date"
                value={editData.deliveryDate}
                onChange={(e) => setEditData({...editData, deliveryDate: e.target.value})}
              />
              <CvetyInput
                label="–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏"
                type="time"
                value={editData.deliveryTime}
                onChange={(e) => setEditData({...editData, deliveryTime: e.target.value})}
              />
            </div>
            
            <CvetyInput
              label="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É"
              value={editData.comment}
              onChange={(e) => setEditData({...editData, comment: e.target.value})}
            />
            
            <CvetyTextarea
              label="–¢–µ–∫—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∫–∏"
              value={editData.cardText}
              onChange={(e) => setEditData({...editData, cardText: e.target.value})}
              className="min-h-[80px]"
            />
            
            <div className="flex gap-[var(--spacing-3)]">
              <CvetyButton 
                variant="primary" 
                onClick={handleSave}
                disabled={isSaving}
                className="flex-1"
              >
                {isSaving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
              </CvetyButton>
              <CvetyButton 
                variant="secondary" 
                onClick={handleCancel}
                disabled={isSaving}
                className="flex-1"
              >
                –û—Ç–º–µ–Ω–∏—Ç—å
              </CvetyButton>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}