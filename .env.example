# ⚠️ ENVIRONMENT CONFIGURATION - SECURITY WARNING ⚠️
#
# This file contains EXAMPLES ONLY. Never commit .env to git.
# Before running docker-compose, create a .env file with REAL values:
#   cp .env.example .env
#   # Then edit .env with your actual secrets
#
# Generate SECRET_KEY with:
#   openssl rand -hex 32

# ===================
# REQUIRED: Core Secrets (MUST be set)
# ===================

# Backend JWT Secret Key - CRYPTOGRAPHICALLY SECURE random string
# ⚠️ CRITICAL: Application will FAIL without this
# Generate with: openssl rand -hex 32
SECRET_KEY=please-generate-a-secure-random-key-with-openssl-rand-hex-32

# Anthropic Claude API Key - for AI features (Telegram bot, AI Agent)
# Get from: https://console.anthropic.com
# Keep SECRET - this controls access to Claude API (costs money!)
CLAUDE_API_KEY=sk-ant-api03-your-actual-key-here

# Telegram Bot Token - for Telegram bot integration
# Get from: https://t.me/botfather with /newbot command
TELEGRAM_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyzABCDEfghi

# ===================
# OPTIONAL: Kaspi Pay (Kazakhstan Payment Provider)
# ===================

# Kaspi Pay production API credentials (only if using real payments)
# KASPI_ACCESS_TOKEN=your-kaspi-access-token-from-merchant-portal
# KASPI_API_BASE_URL=https://api.kaspi.kz/api/v2/paymentkaspi

# ===================
# Frontend Configuration (Development)
# ===================

# API Base URL - Backend service URL
VITE_API_BASE_URL=http://localhost:8014/api/v1

# Cloudflare Image Worker URL
VITE_IMAGE_WORKER_URL=https://flower-shop-images.alekenov.workers.dev

# Port configurations (for local development)
VITE_API_PORT=8014
VITE_FRONTEND_PORT=5176

# ===================
# Backend Configuration (Development)
# ===================

# Database URL (PostgreSQL for production, SQLite for development)
# Production: PostgreSQL on Railway
# Local: SQLite for quick setup
DATABASE_URL=sqlite+aiosqlite:///./figma_catalog.db

# Debug mode (true for development, false for production)
DEBUG=true

# CORS Origins (comma-separated) - already configured in docker-compose.yml
# http://localhost:5176 (admin frontend)
# http://localhost:5179 (old website)
# http://localhost:5180 (new shop)
# http://localhost:3000 (development)
# http://localhost:8080 (telegram bot)
CORS_ORIGINS=http://localhost:5176,http://localhost:5179,http://localhost:5180,http://localhost:3000,http://localhost:8080

# Server Configuration
PORT=8014
API_HOST=0.0.0.0

# JWT Configuration
ACCESS_TOKEN_EXPIRE_MINUTES=60
REFRESH_TOKEN_EXPIRE_DAYS=7

# Application
PROJECT_NAME="Figma Product Catalog API"

# ===================
# Logging
# ===================

LOG_LEVEL=INFO

# ===================
# Docker Compose Services
# ===================

# These are auto-configured in docker-compose.yml, no need to set:
# REDIS_URL=redis://redis:6379
# DATABASE_URL=postgresql://postgres:password@postgres:5432/figma_catalog